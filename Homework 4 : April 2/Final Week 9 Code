<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>Line Updates</title>
        <script src= "https://d3js.org/d3.v7.min.js"></script>
        <style type="text/css">
        
            .axis path, 
            .axis line{
                stroke: rgb(240, 100, 0);
            }

            .axis text{
                font-family: sans-serif;
                font-size: 10px;
                fill: rgb(245, 149, 14);
                }
            
            .line {
                fill: none; 
                stroke: mediumvioletred; 
                stroke-width: 2px;
            }
            
        
            button {
                display: inline-block;
                background-color: rgb(245, 110, 14);
                border: none;
                color: white;
                text-align: center;
                text-decoration: none;
                border-radius: 2px; 
                font-size: 12px;   
            }

            button:hover {
                background-color: mediumvioletred;
            }
            
            
            h1 {
                font-family: sans-serif;
                font-size: 28px;
                color: rgb(246, 149, 80);
            }
        
        /* buttonAvg{
                background-color: gold;
            }*/

        </style>
    </head>
    <body>
      
        <h1> Rio de Janeiro, Brasil: Temperature (in Celsius) Data 1991-2021</h1>
        <button id="buttonAvg">Avg Temp</button>
        <button id="buttonMin">Min Temp</button>
        <button id="buttonMax">Max Temp</button>
        <br>
        <script type="text/javascript">
            
            
            const w = 500;
            const h = 500;
            const margin = 50;
            const parseTime = d3.timeParse("%B");

            /* Data (1991-2021 summarized weather data for
            "RIO DE JANEIRO, BRAZIL" area. Includes avg, max, min temps in Celsius)
Source: https://en.climate-data.org/south-america/brazil/rio-de-janeiro-208/r/march-3/*/
            
            d3.csv("Rio-Data99-21.csv").then(data => {
            console.log("data", data)
                
                data.forEach(d => { 
                d.month = parseTime(d.month);
                d.avg = +d.avg;
                d.min = +d.min;
                d.max = +d.max;    
                });
            
           
            const xScale = d3.scaleTime()
                             .domain(d3.extent(data, d => d.month)) 
                             .range([margin, w-margin]); 

            const yScale = d3.scaleLinear()
                             .domain([0, d3.max(data, d => Math.max(d.min, d.max))]) 
                             .range([h-margin, margin]); 

            //SVG
            const svg = d3.select("body")
                    .append("svg")
                    .attr("width", w)
                    .attr("height", h);

            //bottom axis 
            const bottomAxis = d3.axisBottom()
                                .scale(xScale)
                                .tickFormat(d3.timeFormat("%b"));
             
            svg.append("g")
                .attr("class", "axis") 
                .attr("transform", "translate(0," + (h-margin) + ")") 
                .call(bottomAxis);
            
            //left axis
            const leftAxis = d3.axisLeft()
                             .scale(yScale);
            
            svg.append("g")
               .attr("class", "axis") 
               .attr("transform", "translate(" + margin + ",0)")
               .call(leftAxis);
            
            
            function drawData(which){
                
              
                const coords = d3.line()
                .x(d=>xScale(d.month))
                .y(function(d){
                 if (which == "avg"){ return yScale(d.avg)}
                 else if (which == "min"){return yScale(d.min)}
                 else if (which == "max"){return yScale(d.max)}
                 else {return yScale(d.avg)}   
                });
                

              
                const line = svg.selectAll(".line")
                .data([data])    
                .join("path")
                //.transition() //to animate transitions
                //.duration(2000) //determines how long transition takes in milliseconds. Include after transition. (1000ms = 1s)
                //.delay(400)
                //.ease(d3.easeLinear) 
                //.ease(d3.easeBounceIn)
                //.ease(d3.easeElasticIn)
                .attr("d", coords)
                .attr("class", "line");
            }
            
            
            d3.selectAll("button").on("click", (event,d)=>{
                const selected = event.currentTarget;
                    if (selected.id == "buttonMin"){
                    drawData("min")
                    } else if (selected.id == "buttonMax"){
                    drawData("max")
                    } else if (selected.id == "buttonAvg"){
                    drawData("avg")
                    } else {
                    drawData("avg")
                    }})
            
            drawData("avg")
            });

        </script>
    </body>
</html>
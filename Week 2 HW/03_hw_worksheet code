<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>SVG Scatterplot Homework 1</title>
        <script src= "https://d3js.org/d3.v7.min.js"></script>
        <style type="text/css">
            /*TBD*/

        </style>
    </head>
    <body>
        <script type="text/javascript">
        
        //1. Use this dataset for our scatterplot -- nothing to do.    
        
        /* NOTE: this looks different the data we used for a bar chart. 
        It is an array of arrays. [200, 40] is the [x,y] values of the
        first point in our scatterplot. Do you remember how to call 
        array values? See our foundations 1 slide deck if needed.*/      
            
            const data = [
                            [200, 40], [170, 100], [400, 60], [100, 150], [410, 300], [120, 220], [310, 260], [400, 110]
            ];

        
        //2. Declare SVG width and height in pixels (remember the ; after declaring variables!)
            
            //TODO: const
            //TODO: const

            const svgWidth = 500;
            const svgHeight = 500;
            

        //3. Create our SVG element, applying the SVG (canvas) width and height 
        //NOTE: this should be pretty straight forward from our example. 
            
            
            //TODO: const svg = d3.select()
                                // .append()
                                // .attr() 
                                // .attr(); //Hint: don't delete this ending ;

            const svg = d3.select("body")
                          .append("svg")//we are now appending our svg 
                          .attr("width", svgWidth)//apply width and height specified  
                          .attr("height", svgHeight);



            
        //4. Use "circle" (not "rect") and add them to SVG to visualize our data. 
            
        /*NOTE: Remember that "rect" needed the following in .attr(): 
        x,y,width,height. But, "circle" requires different parameters
        (3 in total)-check today's slide deck.*/ 
        //TIP: get the circles showing before you attempt the labels (step 5) 

        // svg.selectAll("rect") //selectAll rects in the SVG not just one
             //   .data(data) //our data! 
             //   .enter()
             //   .append("rect") //actually adds rect
             //   .attr("x", (d,i) => i * (svgWidth / data.length)) // x for rects: making rects evenly spaced per the width of our canvas, remember: d is our data value and i is our index placeholder
             //   .attr("y", d=> svgHeight - d) // y for rects: making the y for rects the height of the svg minus the data value --  remember SVG coordinates (x,y) for rect are for the upper-left corner!
             //   .attr("width", svgWidth / data.length - barPadding) //width of bars is determined by the width of our SVG divided by the length of our data set, minus the space between each bar
             //   .attr("height", d=>d); //height of rects will be the value of the data
            
                  svg.selectAll("circle")
                         .data(data)
                         .enter()
                         .append("circle")
                         .attr("cx" , d => d [0]) //(a required circle value, and a function of what it returns)  // Hint: we want to return d[] with the x value of the array
                         .attr("cy" , d=> svgHeight - d[1]) //(a required circle value, and a function of what it returns)  // Hint: we want to return d[] with the y value of the array 
                         .attr("r" , 10) //(another required circle value, and a number: try 10)
                         .attr("fill" , "pink");  //optional: change the color of the circles 
                        
                        
            //HINT: don't forget the ending ;


        //5. Add data labels 
        //NOTE: This will rely on much of the same code we have used in our SVG example. 
            
            // TODO: svg.selectAll()
            //      .data()
            //      .enter()
            //      .append()
            //      .text() //we want the text to return the data values
            //      .attr() //we want to give the text an x value, use what you used above, mind the difference between circle text properties 
            //      .attr(); //we want to give the text a y value, use what you used above, mind the difference between circle text properties 

            svg.selectAll("text")
                         .data(data)
                         .enter()
                         .append("text")
                         .text (d =>d)
                         .attr("x" , d=> d [0]) //(a required circle value, and a function of what it returns)  // Hint: we want to return d[] with the x value of the array
                         .attr("y" , d=> svgHeight - d[1]) //(a required circle value, and a function of what it returns)  // Hint: we want to return d[] with the y value of the array 
                         .attr("fill" , "blue");    //optional: change the color of the circles 
                      
                      


        /*OPTIONAL: other .attr() properties you might add to a text 
        element could be, for example, "font-size" and "fill" 
        (where values might be, for example, "12px", and "blue")*/
        //OPTIONAL: try to get your labels to not overlap with the circles 
        //HINT: don't forget the ending ;

        </script>
    </body>
</html>